/* GridLayout
 *
 * IonuÈ› Colceriu - ghinda.net
 * https://github.com/ghinda/gridlayout
 */

@import 'nib';

/* media-query mixin
 */

media-query($size) {

  /* min-width 640px
   */
  if $size == md {
    @media only screen and (min-width: 40em) {
      {block}
    }
  }

  /* min-width 1024px
   */
  if $size == lg {
    @media only screen and (min-width: 64em) {
      {block}
    }
  }

}

/* grid layout defaults
 */

.gl,
.gl-cell,
.gl-scrollview {
  box-sizing: border-box;
}

.gl {
  width: 100%;
}

.gl-cell {
  position: relative;

  /* align at the top by default,
  * to fix issues with inline-block elements padding messing up
  * the vertical positioning of sibling cells, in horizontal grids.
  */
  vertical-align: top;
}

/* cell sizes mixin.
 * 12 rows/columns.
 */

grid-sizes($size) {

  for $i in (1..12) {

    .gl-cell.gl-{$size}-{$i} {
      width: (100 / 12) * $i * 1%;
    }

    &.gl-vertical > .gl-cell.gl-{$size}-{$i} {
      height: (100 / 12) * $i * 1%;
    }

  }

}

/* gridlayout mixin
 */

gl() {

  & {
    display: table;
    border-collapse: collapse;
    table-layout: fixed;
  }

  &.gl-vertical {
    height: 100%;
  }

  & > .gl-cell {
    display: table-cell;
  }

  &.gl-vertical > .gl-cell {
    display: table-row;
  }

  /* grids with .gl-fill take up the full height
   */

  /* IE8 does not expand nested grids to take up the full height,
   * unless included in a table-cell (.gl-vertical uses table rows).
   * That's why we have to use the IE script in IE8 as well.
   */

  .gl-fill {
    height: 100%;
  }

  /* scrollview
   */

  /* MS Edge 20 needs position:relative on the scrollview container,
   * otherwise it adds extra scrollbars on gl-scrollview-content parents,
   * when using multiple nested gl-scrollview's.
   */
  
  .gl-scrollview {
    position: relative;
  }

  /* needs an absolute container, because IE and FF don't
  * support overflow: auto on table cells.
  * only an absolute container will take up the entire cell size.
  */
  & > .gl-cell > .gl-scrollview > .gl-scrollview-content {
   position: absolute;

   /* Use left, right, 0 instead of width: 100%
   * because IE9 sets a 17px (scrollbar width) padding on the right side
   * of scrollview-content otherwise.
   */
   top: 0;
   left: 0;
   right: 0;

   z-index: 1;
   height: 100%;
   overflow: auto;

   /* scrollviews in ios
   */
   overflow-scrolling: touch;
  }

  /* IE8 and FF don't set the right height
   * on cells without non-absolute content.
   * IE9+ needs real, non-whitespace, (eg. \A) content.
   */
  & > .gl-cell > .gl-scrollview:after {
    content: '*';
    visibility: hidden;
  }

  /* when the scrollview parent is a table cell,
   * `.gl-scrollview` has a wrong height,
   * even if the `.gl-scrollview-content` has the correct height.
   */
  & > .gl-cell > .gl-scrollview {
    display: block;
    height: 100%;
  }

  /* `.gl-cell`s are table rows in vertical grids.
   * so we set the scrollview parent as a table cell.
   */
  &.gl-vertical > .gl-cell > .gl-scrollview {
   position: relative;
   display: table-cell;

   /* set height auto so we don't use the height: 100% set
    * for horizontal grids.
    * this prevents the table cell from expanding in horizontal grids.
    */
   height: auto;
  }

}

/* grid shows up md and up
 */

+media-query(md) {
  .gl {
    gl();
  }

  grid-sizes(sm);
  grid-sizes(md);
}

/* large grid sizes
 */
+media-query(lg) {
  grid-sizes(lg);
}

/* show the grid on small screens when using the .gl-sm class
 */

.gl-sm {
  gl();

  grid-sizes(sm);
}

/* vertical alignment
 */

.gl-align-middle {
  vertical-align: middle;
}

.gl-align-bottom {
  vertical-align: bottom;
}
